{
    "1": {
        "1": {
            "ControlId": "1.1",
            "Description": "Avoid the use of the root account",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "2": {
            "ControlId": "1.2",
            "Description": "Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password",
            "Offenders": [
                "arn:aws:iam::465948293893:user/Alice",
                "arn:aws:iam::465948293893:user/usertest"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "No MFA on users with password. "
        },
        "3": {
            "ControlId": "1.3",
            "Description": "Ensure credentials unused for 90 days or greater are disabled",
            "Offenders": [
                "arn:aws:iam::465948293893:root:key1"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Credentials unused > 90 days detected. "
        },
        "4": {
            "ControlId": "1.4",
            "Description": "Ensure access keys are rotated every 90 days or less",
            "Offenders": [
                "arn:aws:iam::465948293893:root:unrotated key1"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Key rotation >90 days or not used since rotation"
        },
        "5": {
            "ControlId": "1.5",
            "Description": "Ensure IAM password policy requires at least one uppercase letter",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "6": {
            "ControlId": "1.6",
            "Description": "Ensure IAM password policy requires at least one lowercase letter",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "7": {
            "ControlId": "1.7",
            "Description": "Ensure IAM password policy requires at least one symbol",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "8": {
            "ControlId": "1.8",
            "Description": "Ensure IAM password policy requires at least one number",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "9": {
            "ControlId": "1.9",
            "Description": "Ensure IAM password policy requires minimum length of 14 or greater",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Password policy does not require at least 14 characters"
        },
        "10": {
            "ControlId": "1.10",
            "Description": "Ensure IAM password policy prevents password reuse",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Password policy does not prevent reusing last 24 passwords"
        },
        "11": {
            "ControlId": "1.11",
            "Description": "Ensure IAM password policy expires passwords within 90 days or less",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "12": {
            "ControlId": "1.12",
            "Description": "Ensure no root account access key exists",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Root have active access keys"
        },
        "13": {
            "ControlId": "1.13",
            "Description": "Ensure MFA is enabled for the root account",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Root account not using MFA"
        },
        "14": {
            "ControlId": "1.14",
            "Description": "Ensure hardware MFA is enabled for the root account",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Root account not using MFA"
        },
        "15": {
            "ControlId": "1.15",
            "Description": "Ensure security questions are registered in the AWS account, please verify manually",
            "Offenders": [],
            "Result": "Manual",
            "ScoredControl": "false",
            "failReason": "Control not implemented using API, please verify manually"
        },
        "16": {
            "ControlId": "1.16",
            "Description": "Ensure IAM policies are attached only to groups or roles",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "17": {
            "ControlId": "1.17",
            "Description": "Enable detailed billing, please verify manually",
            "Offenders": [],
            "Result": "Manual",
            "ScoredControl": "true",
            "failReason": "Control not implemented using API, please verify manually"
        },
        "18": {
            "ControlId": "1.18",
            "Description": "Ensure IAM Master and IAM Manager roles are active. Control under review/investigation",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": "No IAM Master or IAM Manager role created"
        },
        "19": {
            "ControlId": "1.19",
            "Description": "Maintain current contact details, please verify manually",
            "Offenders": [],
            "Result": "Manual",
            "ScoredControl": "true",
            "failReason": "Control not implemented using API, please verify manually"
        },
        "20": {
            "ControlId": "1.20",
            "Description": "Ensure security contact information is registered, please verify manually",
            "Offenders": [],
            "Result": "Manual",
            "ScoredControl": "true",
            "failReason": "Control not implemented using API, please verify manually"
        },
        "21": {
            "ControlId": "1.21",
            "Description": "Ensure IAM instance roles are used for AWS resource access from instances, application code is not audited",
            "Offenders": [
                "i-053bc5a4fbc2312e2"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Instance not assigned IAM role for EC2"
        },
        "22": {
            "ControlId": "1.22",
            "Description": "Ensure a support role has been created to manage incidents with AWS Support",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "No user, group or role assigned AWSSupportAccess"
        },
        "23": {
            "ControlId": "1.23",
            "Description": "Do not setup access keys during initial user setup for all IAM users that have a console password",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "false",
            "failReason": ""
        },
        "24": {
            "ControlId": "1.24",
            "Description": "Ensure IAM policies that allow full administrative privileges are not created",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        }
    },
    "2": {
        "1": {
            "ControlId": "2.1",
            "Description": "Ensure CloudTrail is enabled in all regions",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "2": {
            "ControlId": "2.2",
            "Description": "Ensure CloudTrail log file validation is enabled",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "3": {
            "ControlId": "2.3",
            "Description": "Ensure the S3 bucket CloudTrail logs to is not publicly accessible",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "4": {
            "ControlId": "2.4",
            "Description": "Ensure CloudTrail trails are integrated with CloudWatch Logs",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "5": {
            "ControlId": "2.5",
            "Description": "Ensure AWS Config is enabled in all regions",
            "Offenders": [
                "ap-south-1:NotRecording",
                "eu-west-3:NotRecording",
                "eu-west-2:NotRecording",
                "eu-west-1:NotRecording",
                "ap-northeast-2:NotRecording",
                "ap-northeast-1:NotRecording",
                "sa-east-1:NotRecording",
                "ca-central-1:NotRecording",
                "ca-central-1:SNSDelivery",
                "ap-southeast-1:NotRecording",
                "ap-southeast-2:NotRecording",
                "eu-central-1:NotRecording",
                "us-east-1:S3orSNSDelivery",
                "us-east-2:NotRecording",
                "us-east-2:SNSDelivery",
                "us-west-1:NotRecording",
                "us-west-2:NotRecording",
                "us-west-2:SNSDelivery"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Config not enabled in all regions, not capturing all/global events or delivery channel errors"
        },
        "6": {
            "ControlId": "2.6",
            "Description": "Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket",
            "Offenders": [
                "Trail:arn:aws:cloudtrail:us-east-1:465948293893:trail/test-cloudTrail-1P3PHK3CR2YRC - S3Bucket:test-bucket-qnt134sbdxhx"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "CloudTrail S3 bucket without logging discovered"
        },
        "7": {
            "ControlId": "2.7",
            "Description": "Ensure CloudTrail logs are encrypted at rest using KMS CMKs",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "8": {
            "ControlId": "2.8",
            "Description": "Ensure rotation for customer created CMKs is enabled",
            "Offenders": [
                "Key:arn:aws:kms:us-east-1:465948293893:key/274006cf-41dc-496b-952f-13669d2fa130"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "KMS CMK rotation not enabled"
        }
    },
    "3": {
        "1": {
            "ControlId": "3.1",
            "Description": "Ensure log metric filter unauthorized api calls",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Incorrect log metric alerts for unauthorized_api_calls"
        },
        "2": {
            "ControlId": "3.2",
            "Description": "Ensure a log metric filter and alarm exist for Management Console sign-in without MFA",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Incorrect log metric alerts for management console signin without MFA"
        },
        "3": {
            "ControlId": "3.3",
            "Description": "Ensure a log metric filter and alarm exist for root usage",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Incorrect log metric alerts for root usage"
        },
        "4": {
            "ControlId": "3.4",
            "Description": "Ensure a log metric filter and alarm exist for IAM changes",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Incorrect log metric alerts for IAM policy changes"
        },
        "5": {
            "ControlId": "3.5",
            "Description": "Ensure a log metric filter and alarm exist for CloudTrail configuration changes",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Incorrect log metric alerts for CloudTrail configuration changes"
        },
        "6": {
            "ControlId": "3.6",
            "Description": "Ensure a log metric filter and alarm exist for console auth failures",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for console auth failures"
        },
        "7": {
            "ControlId": "3.7",
            "Description": "Ensure a log metric filter and alarm exist for disabling or scheduling deletion of KMS CMK",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for disabling or scheduling deletion of KMS CMK"
        },
        "8": {
            "ControlId": "3.8",
            "Description": "Ensure a log metric filter and alarm exist for S3 bucket policy changes",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for S3 bucket policy changes"
        },
        "9": {
            "ControlId": "3.9",
            "Description": "Ensure a log metric filter and alarm exist for for AWS Config configuration changes",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for for AWS Config configuration changes"
        },
        "10": {
            "ControlId": "3.10",
            "Description": "Ensure a log metric filter and alarm exist for security group changes",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for security group changes"
        },
        "11": {
            "ControlId": "3.11",
            "Description": "Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)"
        },
        "12": {
            "ControlId": "3.12",
            "Description": "Ensure a log metric filter and alarm exist for changes to network gateways",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for changes to network gateways"
        },
        "13": {
            "ControlId": "3.13",
            "Description": "Ensure a log metric filter and alarm exist for route table changes",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for route table changes"
        },
        "14": {
            "ControlId": "3.14",
            "Description": "Ensure a log metric filter and alarm exist for VPC changes",
            "Offenders": [],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Ensure a log metric filter and alarm exist for VPC changes"
        },
        "15": {
            "ControlId": "3.15",
            "Description": "Ensure appropriate subscribers to each SNS topic, please verify manually",
            "Offenders": [],
            "Result": "Manual",
            "ScoredControl": "false",
            "failReason": "Control not implemented using API, please verify manually"
        }
    },
    "4": {
        "1": {
            "ControlId": "4.1",
            "Description": "Ensure no security groups allow ingress from 0.0.0.0/0 to port 22",
            "Offenders": [
                "sg-e3275d8b",
                "sg-9ca09eee",
                "sg-cf1a46bd",
                "sg-6be42d03",
                "sg-6c3f5c04"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Found Security Group with port 22 open to the world (0.0.0.0/0)"
        },
        "2": {
            "ControlId": "4.2",
            "Description": "Ensure no security groups allow ingress from 0.0.0.0/0 to port 3389",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "true",
            "failReason": ""
        },
        "3": {
            "ControlId": "4.3",
            "Description": "Ensure VPC flow logging is enabled in all VPCs",
            "Offenders": [
                "ap-south-1 : vpc-a09184c9",
                "eu-west-3 : vpc-864efdef",
                "eu-west-2 : vpc-606e2109",
                "eu-west-1 : vpc-925306f5",
                "ap-northeast-2 : vpc-8605d3ee",
                "ap-northeast-1 : vpc-9b0713ff",
                "sa-east-1 : vpc-5eaca93a",
                "ca-central-1 : vpc-67a1e10e",
                "ap-southeast-1 : vpc-0c796d68",
                "ap-southeast-2 : vpc-a75260c3",
                "eu-central-1 : vpc-063b3c6e",
                "us-east-1 : vpc-f5ec398d",
                "us-east-2 : vpc-8c87dbe5",
                "us-west-1 : vpc-933c09f7",
                "us-west-2 : vpc-b39fd5d5"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "VPC without active VPC Flow Logs found"
        },
        "4": {
            "ControlId": "4.4",
            "Description": "Ensure the default security group of every VPC restricts all traffic",
            "Offenders": [
                "ap-south-1 : sg-ec80f484",
                "eu-west-3 : sg-0747336e",
                "eu-west-2 : sg-0f708767",
                "eu-west-1 : sg-f8a34e83",
                "ap-northeast-2 : sg-082fd363",
                "ap-northeast-1 : sg-8e566ce8",
                "sa-east-1 : sg-19f4a37e",
                "ca-central-1 : sg-8120cbe9",
                "ap-southeast-1 : sg-64d14702",
                "ap-southeast-2 : sg-7a1aa01c",
                "eu-central-1 : sg-89419ce3",
                "us-east-1 : sg-1b3c8569",
                "us-east-1 : sg-2c44a15a",
                "us-east-2 : sg-f5e52c9d",
                "us-west-1 : sg-0bbec26d",
                "us-west-2 : sg-21930b5c"
            ],
            "Result": "false",
            "ScoredControl": "true",
            "failReason": "Default security groups with ingress or egress rules discovered"
        },
        "5": {
            "ControlId": "4.5",
            "Description": "Ensure routing tables for VPC peering are least access",
            "Offenders": [],
            "Result": "true",
            "ScoredControl": "false",
            "failReason": ""
        }
    }
}

